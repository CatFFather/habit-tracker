{"version":3,"sources":["components/Header.jsx","components/AddInputWrap.jsx","components/Habit.jsx","components/Habits.jsx","App.jsx","index.js"],"names":["Header","console","log","className","style","backgroundColor","this","props","habitTotalCount","PureComponent","AddInputWrap","inputRef","React","createRef","inputDataAdd","value","current","addHabit","ref","onKeyDown","e","keyCode","placeholder","onClick","Habit","habit","id","name","count","handleIncrement","handleDecrement","handleDelete","Habits","habits","resetHabits","map","index","Component","App","state","JSON","parse","localStorage","getItem","seq","newHabits","setState","setItem","stringify","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed8e509.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\nclass Header extends PureComponent {\r\n  render() {\r\n    console.log(\"header\");\r\n    return (\r\n      <header>\r\n        <h1 className=\"header__title\">\r\n          <i className=\"fas fa-leaf\"></i>\r\n          Habit Tracker{\" \"}\r\n          <span style={{ backgroundColor: \"green\" }} className=\"havit-count\">\r\n            {this.props.habitTotalCount}\r\n          </span>\r\n        </h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { PureComponent } from \"react\";\r\n\r\n// PureComponent 는 props와 state안에 들어 있는 데이터가 최상에 있는 데이터가 변하지 않으면 render함수가 호출 되지 않는다.\r\nclass AddInputWrap extends PureComponent {\r\n  inputRef = React.createRef(); // DOM 에 접근 가능\r\n  inputDataAdd = () => {\r\n    let value = this.inputRef.current.value;\r\n    value && this.props.addHabit(value);\r\n    this.inputRef.current.value = null; // input 초기화\r\n    // document.querySelector(\".habit__add__input\").value = null;  이런식으로 DOM에 접근하지말고 Ref를 사용하면 됨\r\n  };\r\n  render() {\r\n    console.log(\"AddInputWrap!!!!!!!!!!!!!!!\");\r\n    return (\r\n      <div className=\"habit__add__input__wrap\">\r\n        <input\r\n          ref={this.inputRef}\r\n          className=\"habit__add__input\"\r\n          // onChange={(e) => {\r\n          //   this.props.setAddHabitValue(e.target.value);\r\n          // }}\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) {\r\n              this.inputDataAdd();\r\n            }\r\n          }}\r\n          placeholder=\"Habit\"\r\n        ></input>\r\n        <button onClick={this.inputDataAdd}>Add</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddInputWrap;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nclass Habit extends PureComponent {\r\n  render() {\r\n    console.log(\"habit\");\r\n    const { id, name, count } = this.props.habit || {};\r\n    const { handleIncrement, handleDecrement, handleDelete } = this.props;\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"havit-name\">{name}</span>\r\n        <span className=\"havit-count\">{count}</span>\r\n        <button\r\n          className=\"habit-button habit-increase\"\r\n          onClick={() => {\r\n            handleIncrement(id);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-decrease\"\r\n          onClick={() => {\r\n            handleDecrement(id);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-delete\"\r\n          onClick={() => {\r\n            handleDelete(id);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { Component } from \"react\";\r\nimport Habit from \"./Habit\";\r\n\r\n// 이 컴포넌트에서는 PureComponent를 사용하여도 render가 되기 때문에 사용하지 않는다.\r\nclass Habits extends Component {\r\n  render() {\r\n    console.log(\"Habits\");\r\n    const {\r\n      habits, // 습관들\r\n      handleIncrement, // 증가 함수\r\n      handleDecrement, // 감소 함수\r\n      handleDelete, // 삭제 함수\r\n      resetHabits, // 리셋 함수\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <ul>\r\n          {habits.map((habit, index) => {\r\n            return (\r\n              <Habit\r\n                key={habit && habit.id}\r\n                habit={habit}\r\n                handleIncrement={handleIncrement}\r\n                handleDecrement={handleDecrement}\r\n                handleDelete={handleDelete}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        <button onClick={resetHabits}>Reset All</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habits;\r\n","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Header from \"./components/Header\";\nimport AddInputWrap from \"./components/AddInputWrap\";\nimport Habits from \"./components/Habits\";\n\nclass App extends Component {\n  state = {\n    // addHabitValue: null, state로 관리 할 필요 없음 Ref로 input 접근\n    habits: JSON.parse(localStorage.getItem(\"habits\")) || [],\n    seq: JSON.parse(localStorage.getItem(\"habits-seq\")) || 0,\n  };\n\n  // state 오브젝트 안에 있는 count를 증가 한뒤 state를 업데이트 해야함.\n  // 증가\n  handleIncrement = (id) => {\n    const newHabits = this.state.habits.map((habit) => {\n      if (habit.id === id) {\n        return {\n          id: habit.id,\n          name: habit.name,\n          count: habit.count + 1,\n        };\n      } else {\n        return habit;\n      }\n    });\n    this.setState(() => {\n      return { habits: newHabits };\n    });\n    // localStorage에 저장\n    localStorage.setItem(\"habits\", JSON.stringify(newHabits));\n  };\n  // 감소\n  handleDecrement = (id) => {\n    const newHabits = this.state.habits.map((habit) => {\n      if (habit.count > 0 && habit.id === id) {\n        return {\n          id: habit.id,\n          name: habit.name,\n          count: habit.count - 1,\n        };\n      } else {\n        return habit;\n      }\n    });\n    this.setState(() => {\n      return { habits: newHabits };\n    });\n    // localStorage에 저장\n    localStorage.setItem(\"habits\", JSON.stringify(newHabits));\n  };\n  // 삭제\n  handleDelete = (id) => {\n    const newHabits = this.state.habits.filter((habit) => {\n      return habit.id !== id;\n    });\n    this.setState(() => {\n      return { habits: newHabits };\n    });\n    // localStorage에 저장\n    localStorage.setItem(\"habits\", JSON.stringify(newHabits));\n  };\n\n  // // input창 컨트롤  -- > 필요 없음\n  // setAddHabitValue = (value) => {\n  //   this.setState(() => {\n  //     return { addHabitValue: value };\n  //   });\n  // };\n\n  // Add 버튼 이벤트\n  addHabit = (value) => {\n    const newHabits = [\n      ...this.state.habits,\n      {\n        id: this.state.seq,\n        name: value,\n        count: 0,\n      },\n    ];\n    this.setState(() => {\n      return { habits: newHabits, seq: this.state.seq + 1 };\n    });\n\n    // localStorage에 저장\n    localStorage.setItem(\"habits\", JSON.stringify(newHabits));\n    localStorage.setItem(\"habits-seq\", this.state.seq + 1);\n  };\n\n  // reset 버튼 이벤트 (각각의 habit의 count만 0으로 reset)\n  resetHabits = () => {\n    const newHabits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return {\n          ...habit,\n          count: 0,\n        };\n      } else {\n        return habit;\n      }\n    });\n    console.log(newHabits);\n    this.setState(() => {\n      return { habits: newHabits };\n    });\n    // localStorage에 저장\n    localStorage.setItem(\"habits\", JSON.stringify(newHabits));\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <>\n        <Header\n          // habitTotalCount 는 count가 1보다 큰것들만 추출\n          habitTotalCount={\n            this.state.habits.filter((habit) => {\n              if (habit.count > 0) {\n                return habit;\n              }\n            }).length\n          }\n        />\n        <AddInputWrap addHabit={this.addHabit} />\n        <Habits\n          habits={this.state.habits}\n          handleIncrement={this.handleIncrement}\n          handleDecrement={this.handleDecrement}\n          handleDelete={this.handleDelete}\n          resetHabits={this.resetHabits}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}